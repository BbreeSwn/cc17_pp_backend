// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id           Int     @id @default(autoincrement())
  userName     String  @unique
  firstName    String? @db.VarChar(30)
  lastName     String? @db.VarChar(30)
  password     String
  isSuperAdmin Boolean @default(false)

  postContent PostContent[]
  Activity    Activity[]
}

model PostContent {
  id          Int      @id @default(autoincrement())
  title       String?
  messageText String? @db.MediumText
  description String? @db.VarChar(256)
  images_post String?
  cover_image String?
  videos      String?
  createAt    DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updateAt    DateTime @default(now()) @map("updated_at") @db.Timestamp(0)
  admin_id    Int
  catagorie_id Int

  admin Admin @relation(fields: [admin_id], references: [id], onDelete: Cascade)
  catagories Catagories @relation(fields: [catagorie_id] , references: [id])
}

model Users {
  id       Int     @id @default(autoincrement())
  userName String  @unique
  password String
  email    String?

  users_activity Users_Activity[]
}

model Users_Activity {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  ActivityId Int      @map("activity_id")
  createAt   DateTime @default(now()) @map("created_at") @db.Timestamp(0)

  users Users @relation(fields: [userId], references: [id])
}

model Activity {
  id       Int      @id @default(autoincrement())
  postLink String?
  images   String?
  title    String?
  detail   String?
  adminId  Int      @map("admin_id")
  createAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updateAt DateTime @default(now()) @map("updated_at") @db.Timestamp(0)

  admin Admin @relation(fields: [adminId], references: [id])
}

model Catagories {
  id  Int @id @default(autoincrement())
  catagory_name String @db.VarChar(191)
  catagory_image String?

postContents PostContent[]
}
